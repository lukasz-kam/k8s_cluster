name: Kubernetes deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'infra/**'

env:
  ECR_REPOSITORY: python-repo
  TF_VAR_aws_region: eu-central-1

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  create_infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_aws_region }}
          role-to-assume: arn:aws:iam::038462790533:role/TerraformRole
          role-session-name: GitHubActionsSession
          role-skip-session-tagging: true

      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="allowed_ip=${{ steps.ip.outputs.ipv4 }}" -var="aws_account=${{ secrets.AWS_ACCOUNT_ID }}" -no-color -out=plan.tfplan
        continue-on-error: true

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/main' && steps.plan.outcome == 'success' &&
          (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve plan.tfplan

      - name: Save master ID
        working-directory: infra
        run: terraform output -raw master_instance_id > master_id.txt

      - name: Upload master ID
        uses: actions/upload-artifact@v4
        with:
          name: master-id
          path: infra/master_id.txt

  deploy_monitoring:
    needs: create_infra
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/monitoring/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_aws_region }}
          role-to-assume: arn:aws:iam::038462790533:role/TerraformRole
          role-session-name: GitHubActionsSession
          role-skip-session-tagging: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Download master ID
        uses: actions/download-artifact@v5
        with:
          name: master-id
          path: temp_master_id

      - name: Set env variable
        run: echo "MASTER_ID=$(cat $GITHUB_WORKSPACE/temp_master_id/master_id.txt)" >> $GITHUB_ENV

      - name: Add permissions to run script
        run: chmod +x ../../scripts/get_kubeconfig.sh

      - name: Get kubeconfig from SSM
        run: ../../scripts/get_kubeconfig.sh

      - name: Start SSM port forwarding
        run: |
          aws ssm start-session \
            --target $MASTER_ID \
            --document-name AWS-StartPortForwardingSession \
            --parameters '{"portNumber":["6443"],"localPortNumber":["6443"]}' &
          echo $! > ssm_pid.txt

      - name: Wait for Kubernetes API port
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 6443; then
              echo "K8s API port is ready"
              sleep 5
              exit 0
            fi
            echo "Waiting for K8s API on 127.0.0.1:6443..."
            sleep 5
          done
          echo "Error: K8s API not ready in time" >&2
          exit 1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="grafana_admin_password=${{ secrets.GRAFANA_PASS }}" -var="domain=${{ secrets.DOMAIN_NAME }}" -var="config_path=${{ env.KUBECONFIG }}" -no-color -out=plan.tfplan
        continue-on-error: true

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/main' && steps.plan.outcome == 'success' &&
          (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve plan.tfplan

      - name: Stop SSM session
        run: kill $(cat ssm_pid.txt)